# Subset data where uo > 0.75 and uo < 0.25
subset_high <- data.frame(T_p = T_p[uo > 0.75], T_o = T_o[uo > 0.75])
subset_low <- data.frame(T_p = T_p[uo < 0.25], T_o = T_o[uo < 0.25])
# Calculate correlation and R^2 values for subsets
correlation_high <- cor(subset_high$T_p, subset_high$T_o)
correlation_low <- cor(subset_low$T_p, subset_low$T_o)
r_squared_high <- correlation_high^2
r_squared_low <- correlation_low^2
print(paste("Correlation for uo > 0.75:", correlation_high))
print(paste("R^2 value for uo > 0.75:", r_squared_high))
print(paste("Correlation for uo < 0.25:", correlation_low))
print(paste("R^2 value for uo < 0.25:", r_squared_low))
library(copula)
library(ggplot2)
library(latex2exp)
rho <- 0.8  # Correlation parameter for t-student copula
true_copula <- tCopula(rho, dim = 2)
n <- 3000
u <- rCopula(n, true_copula)
up <- u[,1]
uo <- u[,2]
data <- data.frame(up=up, uo=uo)
p_rate <- 1
o_rate <- 2
T_p <- qexp(up, rate=p_rate)
T_o <- qexp(uo, rate=o_rate)
T_min <- pmin(T_p, T_o)
I <- ifelse(T_p < T_o, 0, 1)
data <- data.frame(T_p = T_p,
T_o = T_o,
T_min = T_min,
I = I)
p <- ggplot(data, aes(x=up, y=uo)) +
geom_point() +
labs(x="u1", y="u2", title=paste0(n," samples from t-student(",nu,") copula"))
pdf(paste0("fig/",n,"-samples-from-t-student-",nu,".pdf"))
print(p)
dev.off()
pdf(paste0("fig/competing-risks-joint.pdf"))
p <- ggplot(data, aes(x=T_p, y=T_o)) +
geom_point() +
labs(x=TeX(paste0("$T_p, \\lambda=",p_rate,"$")), y=TeX(paste0("$T_p, \\lambda=",o_rate,"$")), title=TeX(paste0("Competing Risks T_p and T_o from t-student Copula with Exponential Marginals"))) +
coord_fixed(ratio=1)
print(p)
dev.off()
mean_T_p <- 1 / p_rate
mean_T_o <- 1 / o_rate
# Create a data frame for plotting
hist_data <- data.frame(Time = c(T_p, T_o),
Group = c(rep("T_p", n), rep("T_o", n)))
# Plot histogram
p <- ggplot(hist_data, aes(x = Time, fill = Group)) +
geom_histogram(alpha = 0.5, position = "identity", bins = 30) +
geom_vline(xintercept = mean_T_p, color = "blue", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = mean_T_o, color = "red", linetype = "dashed", linewidth = 1) +
scale_fill_manual(values = c("blue", "red")) +
labs(x = "Time to Failure", y = "Frequency", title = "Histogram of Time to Failure") +
theme_minimal()
pdf(paste0("fig/competing-risks-histogram-t-student-", nu, "m-", p_rate,"-",o_rate, ".pdf"))
print(p)
dev.off()
library(copula)
library(ggplot2)
library(latex2exp)
rho <- 0.8  # Correlation parameter for t-student copula
true_copula <- tCopula(rho, dim = 2)
n <- 3000
u <- rCopula(n, true_copula)
up <- u[,1]
uo <- u[,2]
data <- data.frame(up=up, uo=uo)
p_rate <- 1
o_rate <- 2
T_p <- qexp(up, rate=p_rate)
T_o <- qexp(uo, rate=o_rate)
T_min <- pmin(T_p, T_o)
I <- ifelse(T_p < T_o, 0, 1)
data <- data.frame(T_p = T_p,
T_o = T_o,
T_min = T_min,
I = I)
p <- ggplot(data, aes(x=up, y=uo)) +
geom_point() +
labs(x="u1", y="u2", title=paste0(n," samples from t-student(",rho,") copula"))
pdf(paste0("fig/",n,"-samples-from-t-student-",nu,".pdf"))
print(p)
dev.off()
pdf(paste0("fig/competing-risks-joint.pdf"))
p <- ggplot(data, aes(x=T_p, y=T_o)) +
geom_point() +
labs(x=TeX(paste0("$T_p, \\lambda=",p_rate,"$")), y=TeX(paste0("$T_p, \\lambda=",o_rate,"$")), title=TeX(paste0("Competing Risks T_p and T_o from t-student Copula with Exponential Marginals"))) +
coord_fixed(ratio=1)
print(p)
dev.off()
mean_T_p <- 1 / p_rate
mean_T_o <- 1 / o_rate
# Create a data frame for plotting
hist_data <- data.frame(Time = c(T_p, T_o),
Group = c(rep("T_p", n), rep("T_o", n)))
# Plot histogram
p <- ggplot(hist_data, aes(x = Time, fill = Group)) +
geom_histogram(alpha = 0.5, position = "identity", bins = 30) +
geom_vline(xintercept = mean_T_p, color = "blue", linetype = "dashed", linewidth = 1) +
geom_vline(xintercept = mean_T_o, color = "red", linetype = "dashed", linewidth = 1) +
scale_fill_manual(values = c("blue", "red")) +
labs(x = "Time to Failure", y = "Frequency", title = "Histogram of Time to Failure") +
theme_minimal()
pdf(paste0("fig/competing-risks-histogram-t-student-", nu, "m-", p_rate,"-",o_rate, ".pdf"))
print(p)
dev.off()
source("~/Documents/data analytics/tcopula.R")
help("tCopula")
source("~/Documents/data analytics/tcopula.R")
source("~/Documents/data analytics/tcopula.R")
source("~/Documents/data analytics/tcopula.R")
source("~/Documents/data analytics/tcopula.R")
source("~/Documents/data analytics/tcopula.R")
#--------------------------------------------------------#
# Sample synthesis with the provided dataset             #
#--------------------------------------------------------#
# Load the necessary package
library(synthpop)
# Load the data.csv in the datasets/data.csv
setwd("/users/pgrad/mamu/Documents/first")
# Create the data frame from the provided dataset
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Replace periods in column names with empty strings
names(data) <- gsub("\\.", "", names(data))
# Alternatively, if you've already loaded data and processed it but need to change column names:
# data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# names(data) <- make.names(names(data), unique = TRUE)
# Convert character variables to factors
character_vars <- sapply(data, is.character)
data[, character_vars] <- lapply(data[, character_vars], as.factor)
# Check for missing values
missing_values <- sapply(data, function(x) sum(is.na(x) | x == "-9"))
print(missing_values)
# Check the summary info about variables
codebook.syn(data)$tab
# Print the column names
colnames(data)
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
# Print the number of rows and columns in the data frame
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
# Display summary of synthetic data
# summary(synthetic_data)
# Compare the synthetic data to the original data
# compare(synthetic_data, data, stat = "counts")
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
#--------------------------------------------------------#
# Sample synthesis with only a modest numer of variables #
#--------------------------------------------------------#
rm(list = ls())                # to clean out workspace
library(synthpop)              # to load package
# This code will use the supplied data frame SD2011
help(SD2011)                   # this will give you information about it
dim(SD2011)                    # get size of data frame
codebook.syn(SD2011)$tab       # get summary info about variables
dim(SD2011)
# Notice that eduspec has 27 levels - so leave this for later.
# Note the negative values in some continuous variables (e.g. nociga).
# SD2011 has 35 variables, so lets go for a smaller number.
# Also bmi should be derived from height and weight,
# so we'll leave it out for now.
mydata <- SD2011[, c(1, 3, 6, 8, 11, 17, 18, 19, 20, 10)]
dim(mydata)
codebook.syn(mydata)$tab
library(synthpop)
setwd("/users/pgrad/mamu/Documents/first")
data <- read.csv("datasets/data.csv")
#data <- read.csv("llama3-8b/results/synthetic_data_llama_3_8b.csv")
names(data) <- gsub("\\.", "", names(data))
# Convert character variables to factors
character_vars <- sapply(data, is.character)
data[, character_vars] <- lapply(data[, character_vars], as.factor)
missing_values <- sapply(data, function(x) sum(is.na(x) | x == "-9"))
print(missing_values)
# Check the summary info about variables
codebook.syn(data)$tab
mydata <- data[, c(1, 2, 3, 4, 5, 6, 7)]
# Convert character variables to factors
character_vars <- sapply(mydata, is.character)
mydata[, character_vars] <- lapply(mydata[, character_vars], as.factor)
# Check the summary info about variables
codebook.syn(mydata)$tab
# Convert integer variables to numeric
integer_vars <- sapply(mydata, is.integer)
mydata[, integer_vars] <- lapply(mydata[, integer_vars], as.numeric)
dim(mydata)
# Generate synthetic data
synthetic_data <- syn(mydata)
print(synthetic_data)
codebook.syn(data)$tab
codebook.syn(data)$tab
codebook.syn(data)$tab
codebook.syn(data)$tab
codebook.syn(data)$tab
codebook.syn(data)$tab
codebook.syn(data)$tab
codebook.syn(data)$tab
codebook.syn(data)$tab
codebook.syn(data)$tab
codebook.syn(data)$tab
codebook.syn(data)$tab
codebook.syn(data)$tab
codebook.syn(mydata)$tab
codebook.syn(mydata)$tab
codebook.syn(mydata)$tab
synthetic_data <- syn(mydata)
synthetic_data <- syn(mydata)
synthetic_data <- syn(mydata)
synthetic_data <- syn(mydata)
